import{p as n}from"./chunks/InputRange.e9ad5eb1.js";import{j as d,r as m,o as g,c as v,a as e,w as o,h as s,y as c,b as t}from"./app.12128179.js";import"./chunks/index.0ae26b57.js";import"./chunks/index.d402bf23.js";import"./chunks/index.046c3cda.js";import"./chunks/throttle.1ff994ca.js";import"./chunks/toNumber.b7089ae3.js";import"./chunks/isSymbol.467490bf.js";import"./chunks/isObjectLike.bee3dca1.js";const b=t('<h1 id="input-range" tabindex="-1">Input Range <a class="header-anchor" href="#input-range" aria-hidden="true">#</a></h1><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><h3 id="simple-usage" tabindex="-1">Simple Usage <a class="header-anchor" href="#simple-usage" aria-hidden="true">#</a></h3>',3),C=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="with-min-max-step" tabindex="-1">With min, max &amp; step <a class="header-anchor" href="#with-min-max-step" aria-hidden="true">#</a></h3>`,2),A=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">min</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">max</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">100</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">step</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">25</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="multiple-mode" tabindex="-1">Multiple Mode <a class="header-anchor" href="#multiple-mode" aria-hidden="true">#</a></h2>`,2),x=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">multiple</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="disabled-state" tabindex="-1">Disabled State <a class="header-anchor" href="#disabled-state" aria-hidden="true">#</a></h2>`,2),T=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">disabled</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="readonly-state" tabindex="-1">Readonly State <a class="header-anchor" href="#readonly-state" aria-hidden="true">#</a></h2>`,2),f=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="binding-v-model" tabindex="-1">Binding v-model <a class="header-anchor" href="#binding-v-model" aria-hidden="true">#</a></h2>`,2),S=s("p",null,[s("strong",null,"result:")],-1),E={class:"truncate"},V=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="v-model-in-multiple-mode" tabindex="-1">v-model in multiple mode <a class="header-anchor" href="#v-model-in-multiple-mode" aria-hidden="true">#</a></h3><p>There are 2 ways to use v-model in <code>multiple</code> mode.</p><h4 id="_1-using-basic-v-model" tabindex="-1">1. Using basic v-model <a class="header-anchor" href="#_1-using-basic-v-model" aria-hidden="true">#</a></h4><p>You can use basic <code>v-model</code> to handle multiple range input, The value will be tuple of number, <code>[start, end]</code></p>`,5),I=s("p",null,[s("strong",null,"result:")],-1),N={class:"truncate"},P=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">multiple</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h4 id="_2-using-v-model-start-and-v-model-end" tabindex="-1">2. using v-model:start and v-model:end <a class="header-anchor" href="#_2-using-v-model-start-and-v-model-end" aria-hidden="true">#</a></h4><p>You can specific binding the value using <code>v-model:start</code> or <code>v-model:end</code></p>`,3),k=s("p",null,[s("strong",null,"start:")],-1),R={class:"truncate"},q=s("p",null,[s("strong",null,"end:")],-1),w={class:"truncate"},B=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-range</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">start</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">start</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">end</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">end</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">multiple</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-hidden="true">#</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-hidden="true">#</a></h3><table><thead><tr><th>Props</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th>Description</th></tr></thead><tbody><tr><td><code>min</code></td><td style="text-align:center;"><code>Number</code></td><td style="text-align:center;"><code>0</code></td><td>Lowest value in range</td></tr><tr><td><code>max</code></td><td style="text-align:center;"><code>Number</code></td><td style="text-align:center;"><code>100</code></td><td>Highest value in range</td></tr><tr><td><code>step</code></td><td style="text-align:center;"><code>Number</code></td><td style="text-align:center;"><code>1</code></td><td>Step movement</td></tr><tr><td><code>multiple</code></td><td style="text-align:center;"><code>Boolean</code></td><td style="text-align:center;"><code>false</code></td><td>Enable multiple mode</td></tr><tr><td><code>disabled</code></td><td style="text-align:center;"><code>Boolean</code></td><td style="text-align:center;"><code>false</code></td><td>Disabled state</td></tr><tr><td><code>readonly</code></td><td style="text-align:center;"><code>Boolean</code></td><td style="text-align:center;"><code>false</code></td><td>Readonly state</td></tr><tr><td><code>error</code></td><td style="text-align:center;"><code>Boolean</code></td><td style="text-align:center;"><code>false</code></td><td>Error state</td></tr><tr><td><code>modelValue</code></td><td style="text-align:center;"><code>Number</code></td><td style="text-align:center;"><code>-</code></td><td>v-model value</td></tr><tr><td><code>start</code></td><td style="text-align:center;"><code>Number</code></td><td style="text-align:center;"><code>-</code></td><td>v-model:start value</td></tr><tr><td><code>end</code></td><td style="text-align:center;"><code>Number</code></td><td style="text-align:center;"><code>-</code></td><td>v-model:end value</td></tr></tbody></table><h3 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-hidden="true">#</a></h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td colspan="2" class="text-center">There no slots here</td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-hidden="true">#</a></h3><table><thead><tr><th>Name</th><th>Arguments</th><th>Description</th></tr></thead><tbody><tr><td><code>change</code></td><td><code>Number</code> | <code>[Number, Number]</code></td><td>Event when value changed</td></tr></tbody></table><h2 id="see-also" tabindex="-1">See Also <a class="header-anchor" href="#see-also" aria-hidden="true">#</a></h2><ul><li><a href="/design-system/components/input/">Input</a></li><li><a href="/design-system/components/strengthbar/">Strengthbar</a></li></ul>`,10),Q=JSON.parse('{"title":"Input Range","description":"","frontmatter":{},"headers":[{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[{"level":3,"title":"Simple Usage","slug":"simple-usage","link":"#simple-usage","children":[]},{"level":3,"title":"With min, max & step","slug":"with-min-max-step","link":"#with-min-max-step","children":[]}]},{"level":2,"title":"Multiple Mode","slug":"multiple-mode","link":"#multiple-mode","children":[]},{"level":2,"title":"Disabled State","slug":"disabled-state","link":"#disabled-state","children":[]},{"level":2,"title":"Readonly State","slug":"readonly-state","link":"#readonly-state","children":[]},{"level":2,"title":"Binding v-model","slug":"binding-v-model","link":"#binding-v-model","children":[{"level":3,"title":"v-model in multiple mode","slug":"v-model-in-multiple-mode","link":"#v-model-in-multiple-mode","children":[]}]},{"level":2,"title":"API","slug":"api","link":"#api","children":[{"level":3,"title":"Props","slug":"props","link":"#props","children":[]},{"level":3,"title":"Slots","slug":"slots","link":"#slots","children":[]},{"level":3,"title":"Events","slug":"events","link":"#events","children":[]}]},{"level":2,"title":"See Also","slug":"see-also","link":"#see-also","children":[]}],"relativePath":"components/input-range/index.md"}'),U={name:"components/input-range/index.md"},X=Object.assign(U,{setup(M){const r=d(50),i=d([30,70]),u=d(0),D=d(100);return(j,a)=>{var y,F,h,_;const l=m("preview");return g(),v("div",null,[b,e(l,{class:"flex-col"},{default:o(()=>[e(n)]),_:1}),C,e(l,{class:"flex-col"},{default:o(()=>[e(n,{min:"0",max:"100",step:"25"})]),_:1}),A,e(l,{class:"flex-col"},{default:o(()=>[e(n,{multiple:""})]),_:1}),x,e(l,{class:"flex-col"},{default:o(()=>[e(n,{disabled:""})]),_:1}),T,e(l,{class:"flex-col"},{default:o(()=>[e(n,{readonly:""})]),_:1}),f,e(l,{class:"flex-col"},{default:o(()=>[e(n,{modelValue:r.value,"onUpdate:modelValue":a[0]||(a[0]=p=>r.value=p)},null,8,["modelValue"])]),_:1}),S,s("pre",E,[s("code",null,c((y=r.value)!=null?y:"-"),1)]),V,e(l,{class:"flex-col"},{default:o(()=>[e(n,{modelValue:i.value,"onUpdate:modelValue":a[1]||(a[1]=p=>i.value=p),multiple:""},null,8,["modelValue"])]),_:1}),I,s("pre",N,[s("code",null,c((F=i.value)!=null?F:"-"),1)]),P,e(l,{class:"flex-col"},{default:o(()=>[e(n,{start:u.value,"onUpdate:start":a[2]||(a[2]=p=>u.value=p),end:D.value,"onUpdate:end":a[3]||(a[3]=p=>D.value=p),multiple:""},null,8,["start","end"])]),_:1}),k,s("pre",R,[s("code",null,c((h=u.value)!=null?h:"-"),1)]),q,s("pre",w,[s("code",null,c((_=D.value)!=null?_:"-"),1)]),B])}}});export{Q as __pageData,X as default};
