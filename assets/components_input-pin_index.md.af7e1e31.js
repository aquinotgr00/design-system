import{p as E}from"./chunks/Input.760a7f8f.js";import{t as N,e as R,s as w}from"./chunks/theme.6d4ed01a.js";import{u as B}from"./chunks/use-focus.f1095479.js";import{m as U,t as $,r as A,c as P,_ as O,J as S,x as y,p as g,K,L as G,A as L,U as j,a2 as F,a5 as D,v as z,N as s,B as i,G as m,z as J,u as T,X as p,i as M}from"./chunks/framework.f3d2a0a5.js";import"./chunks/index.4926e9c0.js";import"./chunks/index.a3ecab28.js";import"./chunks/Input.vue_vue_type_style_index_0_lang.4ed993c7.js";import"./chunks/baseClamp.947838b9.js";import"./chunks/toNumber.09abc7f0.js";import"./chunks/isSymbol.4326927f.js";import"./chunks/isObjectLike.53b0037d.js";const X=U({components:{pInput:E},inheritAttrs:!1,props:{modelValue:{type:String,default:void 0},length:{type:[Number,String],default:5},disabled:{type:Boolean,default:!1},readonly:{type:Boolean,default:!1},error:{type:Boolean,default:!1}},models:{prop:"modelValue",event:"update:modelValue"},emits:["update:modelValue","clear"],setup(e,{emit:l}){var b,f;const c=N("root"),n=R($(e,"length")),a=A([...(f=(b=e.modelValue)==null?void 0:b.padEnd(n.value))!=null?f:""].slice(0,n.value)),u=P(()=>{const t=[];return e.disabled&&t.push("input-pin--disabled"),e.readonly&&t.push("input-pin--readonly"),e.error&&t.push("input-pin--error","state--error"),t}),{next:h,prev:o}=B(c,!1),_=P({get(){var t,r;return[...(r=(t=e.modelValue)==null?void 0:t.padEnd(n.value))!=null?r:""].slice(0,n.value)},set(t){const r=t.map(v=>v||" ").join("").trimEnd();l("update:modelValue",r)}});w(a,_,{deep:!0});function q(t){return a.value.at(t)}function V(t,r){const C=r.target.value;a.value[t]=C,c.value&&(C?h():o())}function x(t){t.target.select()}function I(t){c.value&&!t.target.value.trim()&&o()}function k(t){a.value=[...t.clipboardData.getData("Text")].slice(0,n.value)}return{classNames:u,num:n,localModel:a,getValue:q,setValue:V,onFocus:x,onDelete:I,onPaste:k,nextFocus:h,prevFocus:o}}});function Y(e,l,c,n,a,u){const h=S("p-input");return y(),g("div",{ref:"root","data-testid":"input-pin",class:z(["input-pin",e.classNames])},[(y(!0),g(K,null,G(e.num,o=>(y(),L(h,j({key:o,maxlength:"1"},e.$attrs,{"model-value":e.getValue(o-1),clearable:!1,readonly:e.readonly,disabled:e.disabled,error:e.error,onInput:_=>e.setValue(o-1,_),onFocusPassive:e.onFocus,onKeyup:[F(D(e.onDelete,["stop","prevent"]),["delete"]),F(D(e.prevFocus,["stop","prevent"]),["left"]),F(D(e.nextFocus,["stop","prevent"]),["right"])],onPastePassive:e.onPaste}),null,16,["model-value","readonly","disabled","error","onInput","onFocusPassive","onKeyup","onPastePassive"]))),128))],2)}const d=O(X,[["render",Y]]),H=p('<h1 id="input-pin" tabindex="-1">Input Pin <a class="header-anchor" href="#input-pin" aria-label="Permalink to &quot;Input Pin&quot;">​</a></h1><blockquote><p>One at time input form.</p></blockquote><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="simple-usage" tabindex="-1">Simple Usage <a class="header-anchor" href="#simple-usage" aria-label="Permalink to &quot;Simple Usage&quot;">​</a></h3>',4),Q=p(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-pin</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="number-of-input" tabindex="-1">Number of Input <a class="header-anchor" href="#number-of-input" aria-label="Permalink to &quot;Number of Input&quot;">​</a></h2><p>You can set how many input digit do you want with prop <code>length</code>, default is <code>5</code>.</p>`,3),W=p(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-pin</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">length</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="disabled-state" tabindex="-1">Disabled State <a class="header-anchor" href="#disabled-state" aria-label="Permalink to &quot;Disabled State&quot;">​</a></h2>`,2),Z=p(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-pin</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">disabled</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="readonly-state" tabindex="-1">Readonly State <a class="header-anchor" href="#readonly-state" aria-label="Permalink to &quot;Readonly State&quot;">​</a></h2>`,2),ee=p(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-pin</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="error-state" tabindex="-1">Error State <a class="header-anchor" href="#error-state" aria-label="Permalink to &quot;Error State&quot;">​</a></h2>`,2),te=p(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-pin</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="binding-v-model" tabindex="-1">Binding v-model <a class="header-anchor" href="#binding-v-model" aria-label="Permalink to &quot;Binding v-model&quot;">​</a></h2><p>Like other input, input value can be binding with <code>v-model</code>.</p>`,3),ae=m("p",null,[m("strong",null,"result:")],-1),se={class:"truncate whitespace-pre"},ne=p(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p-input-pin</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">result</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table><thead><tr><th>Props</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th>Description</th></tr></thead><tbody><tr><td><code>length</code></td><td style="text-align:center;"><code>Number</code></td><td style="text-align:center;"><code>5</code></td><td>Number of input</td></tr><tr><td><code>disabled</code></td><td style="text-align:center;"><code>Boolean</code></td><td style="text-align:center;"><code>false</code></td><td>Disabled state</td></tr><tr><td><code>readonly</code></td><td style="text-align:center;"><code>Boolean</code></td><td style="text-align:center;"><code>false</code></td><td>Readonly state</td></tr><tr><td><code>error</code></td><td style="text-align:center;"><code>Boolean</code></td><td style="text-align:center;"><code>false</code></td><td>Error state</td></tr><tr><td><code>modelValue</code></td><td style="text-align:center;"><code>String</code></td><td style="text-align:center;"><code>-</code></td><td>v-model value</td></tr></tbody></table><h3 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td colspan="2" class="text-center">There no slots here</td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Arguments</th><th>Description</th></tr></thead><tbody><tr><td><code>change</code></td><td><code>String</code></td><td>Event when value changed</td></tr></tbody></table><h2 id="see-also" tabindex="-1">See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;See Also&quot;">​</a></h2><ul><li><a href="/design-system/components/form-group/">Form Group</a></li><li><a href="/design-system/components/input-group/">Input Group</a></li></ul>`,10),Fe=JSON.parse('{"title":"Input Password · Components","description":"One at time input form.","frontmatter":{"title":"Input Password · Components","description":"One at time input form."},"headers":[],"relativePath":"components/input-pin/index.md","filePath":"components/input-pin/index.md"}'),le={name:"components/input-pin/index.md"},De=Object.assign(le,{setup(e){const l=A("");return(c,n)=>{const a=S("preview");return y(),g("div",null,[H,s(a,null,{default:i(()=>[s(d)]),_:1}),Q,s(a,null,{default:i(()=>[s(d,{length:"3"})]),_:1}),W,s(a,null,{default:i(()=>[s(d,{disabled:""})]),_:1}),Z,s(a,null,{default:i(()=>[s(d,{readonly:""})]),_:1}),ee,s(a,null,{default:i(()=>[s(d,{error:""})]),_:1}),te,s(a,null,{default:i(()=>[s(d,{modelValue:T(l),"onUpdate:modelValue":n[0]||(n[0]=u=>M(l)?l.value=u:null)},null,8,["modelValue"])]),_:1}),ae,m("p",null,[m("code",se,J(T(l)||"-"),1)]),ne])}}});export{Fe as __pageData,De as default};
